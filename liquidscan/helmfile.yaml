
environments:
  default:
    values:
      - secret.yaml

releases:
  - name: liquidscan
    namespace: bigdata
    chart: main/raw
    values:
      - resources:
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: liquidscan
            labels:
              app: liquidscan
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: liquidscan
            template:
              metadata:
                labels:
                  app: liquidscan
              spec:
                containers:
                - name: liquidscan
                  image: ghcr.io/the-analytics-gladiators/liquidscan:latest
                  env:
                    - name: REACT_APP_BSC_NODE
                      value: "{{ .Values.bsc_node }}"
                    - name: REACT_APP_POLYGON_NODE
                      value: "{{ .Values.polygon_node }}"
                    - name: REACT_APP_ETHEREUM_NODE
                      value: "{{ .Values.ethereum_node }}"
                    - name: REACT_APP_BACKEND_URL
                      value: https://liquidscan.gladiators.dev/api
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: liquid-backend
            labels:
              app: liquid-backend
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: liquid-backend
            template:
              metadata:
                labels:
                  app: liquid-backend
              spec:
                containers:
                - name: liquid-backend
                  image: ghcr.io/the-analytics-gladiators/liquid-backend:latest
                  env:
                  - name: ORACLE_PASS
                    value: "{{ .Values.oracle_pass }}"

        - apiVersion: v1
          kind: Service
          metadata:
            name: liquidscan
          spec:
            selector:
              app: liquidscan
            ports:
              - protocol: TCP
                port: 3000
                targetPort: 3000
        - apiVersion: v1
          kind: Service
          metadata:
            name: liquid-backend
          spec:
            selector:
              app: liquid-backend
            ports:
              - protocol: TCP
                port: 8080
                targetPort: 8080
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: liquidscan
            annotations:
              kubernetes.io/ingress.class: traefik
          spec:
            rules:
            - host: "liquidscan.dg"
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: liquidscan
                      port:
                        number: 3000
            - host: "liquidscan.gladiators.dev"
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: liquidscan
                      port:
                        number: 3000
                - path: /api
                  pathType: Prefix
                  backend:
                    service:
                      name: liquid-backend
                      port:
                        number: 8080
